package database

import "telemetry-collector/internal/models"

// getFieldValue 获取平台指标字段值
func getFieldValue(metric *models.PlatformMetric, fieldIndex int) interface{} {
	switch fieldIndex {
	case 4:
		return metric.OperStatus
	case 5:
		return metric.Uptime
	case 6:
		return metric.UsedPower
	case 7:
		return metric.AllocatedPower
	case 8:
		return metric.CurrentVoltage
	case 9:
		return metric.CurrentCurrent
	case 10:
		return metric.TotalCapacity
	case 11:
		return metric.UsedCapacity
	case 12:
		return metric.Type
	case 13:
		return metric.RedundancyType
	case 14:
		return metric.Modules
	case 15:
		return metric.TotalInputPower
	case 16:
		return metric.FanSpeed
	case 17:
		return metric.FanState
	case 18:
		return metric.FanPhyStatus
	case 19:
		return metric.FanWorkMode
	case 20:
		return metric.FanCurrentPower
	case 21:
		return metric.FanCurrentVoltage
	case 22:
		return metric.FanCurrentCurrent
	case 23:
		return metric.FanSpeedPercent
	case 24:
		return metric.MemAvailable
	case 25:
		return metric.MemUtilized
	case 26:
		return metric.MemFree
	case 27:
		return metric.MemUsage
	case 28:
		if metric.MemAlarmStatus != nil {
			return *metric.MemAlarmStatus
		}
		return nil
	case 29:
		return metric.StorageAvailability
	case 30:
		return metric.TempInstant
	case 31:
		return metric.TempAvg
	case 32:
		return metric.TempMin
	case 33:
		return metric.TempMax
	case 34:
		return metric.TempInterval
	case 35:
		return metric.TempMinTime
	case 36:
		return metric.TempMaxTime
	case 37:
		return metric.AlarmStatus
	case 38:
		return metric.TempAlarmThreshold
	case 39:
		return metric.TempAlarmSeverity
	case 40:
		return metric.TempMinorThreshold
	case 41:
		return metric.TempMajorThreshold
	case 42:
		return metric.TempFatalThreshold
	case 43:
		return metric.TempInstantString
	case 44:
		return metric.TempStatus
	case 45:
		return metric.TempDescription
	case 46:
		return metric.PowerEnable
	case 47:
		return metric.PowerCapacity
	case 48:
		return metric.PowerInputCurrent
	case 49:
		return metric.PowerInputVoltage
	case 50:
		return metric.PowerOutputCurrent
	case 51:
		return metric.PowerOutputVoltage
	case 52:
		return metric.PowerOutputPower
	case 53:
		return metric.PowerWorkState
	case 54:
		return metric.PowerName
	case 55:
		return metric.PowerPhyState
	case 56:
		return metric.PowerState
	case 57:
		return metric.PowerComState
	case 58:
		return metric.PowerTemperature
	case 59:
		return metric.PowerAvailable
	case 60:
		return metric.PowerCapacityString
	case 61:
		return metric.PowerInputPower
	case 62:
		return metric.PowerInput2Current
	case 63:
		return metric.PowerInput2Voltage
	case 64:
		return metric.PowerOutput2Current
	case 65:
		return metric.PowerOutput2Voltage
	case 66:
		return metric.LinecardPowerAdminState
	case 67:
		return metric.CPUInstant
	case 68:
		return metric.CPUAvg
	case 69:
		return metric.CPUMin
	case 70:
		return metric.CPUMax
	case 71:
		return metric.CPUInterval
	case 72:
		return metric.CPUMinTime
	case 73:
		return metric.CPUMaxTime
	case 74:
		if metric.CPUAlarmStatus != nil {
			return *metric.CPUAlarmStatus
		}
		return nil
	case 75:
		return metric.OpticalInPower
	case 76:
		return metric.OpticalOutPower
	case 77:
		return metric.OpticalBiasCurrent
	case 78:
		return metric.OpticalTemperature
	case 79:
		return metric.OpticalVoltageVol33
	case 80:
		return metric.OpticalVoltageVol5
	case 81:
		if metric.OpticalAlarmLosStatus != nil {
			return *metric.OpticalAlarmLosStatus
		}
		return nil
	case 82:
		return metric.OpticalAlarmLosInfoEventID
	case 83:
		return metric.OpticalAlarmLosInfoEventInterval
	case 84:
		return metric.OpticalAlarmLosInfoInPower
	case 85:
		return metric.OpticalAlarmLosInfoOutPower
	case 86:
		return metric.OpticalOnlineStatus
	case 87:
		return metric.OpticalRxThresholdHighAlarm
	case 88:
		return metric.OpticalRxThresholdPreHighAlarm
	case 89:
		return metric.OpticalRxThresholdLowAlarm
	case 90:
		return metric.OpticalRxThresholdPreLowAlarm
	default:
		return nil
	}
}

// getInterfaceFieldValue 获取接口指标字段值  
func getInterfaceFieldValue(metric *models.InterfaceMetric, fieldIndex int) interface{} {
	switch fieldIndex {
	case 4:
		return metric.Ifindex
	case 5:
		return metric.AdminStatusStr
	case 6:
		return metric.OperStatusStr
	case 7:
		return metric.LastChange
	case 8:
		return metric.Logical
	case 9:
		return metric.Type
	case 10:
		return metric.PhyStatusStr
	case 11:
		return metric.IPv4OperStatusStr
	case 12:
		return metric.ZteifType
	case 13:
		return metric.ZteifIfindex
	case 14:
		return metric.ZteifAdminStatusStr
	case 15:
		return metric.ZteifOperStatusStr
	case 16:
		return metric.ZteifPhyStatusStr
	case 17:
		return metric.ZteifIPv4OperStatusStr
	case 18:
		return metric.ZteifIPv6OperStatusStr
	case 19:
		return metric.InOctets
	case 20:
		return metric.InUnicastPkts
	case 21:
		return metric.InBroadcastPkts
	case 22:
		return metric.InMulticastPkts
	case 23:
		return metric.InDiscards
	case 24:
		return metric.InErrors
	case 25:
		return metric.InUnknownProtos
	case 26:
		return metric.InFcsErrors
	case 27:
		return metric.OutOctets
	case 28:
		return metric.OutUnicastPkts
	case 29:
		return metric.OutBroadcastPkts
	case 30:
		return metric.OutMulticastPkts
	case 31:
		return metric.OutDiscards
	case 32:
		return metric.OutErrors
	case 33:
		return metric.CarrierTransitions
	case 34:
		return metric.LastClear
	case 35:
		return metric.InPkts
	case 36:
		return metric.OutPkts
	case 37:
		return metric.InputUtilization
	case 38:
		return metric.OutputUtilization
	case 39:
		return metric.InTrafficRate
	case 40:
		return metric.InPacketRate
	case 41:
		return metric.OutTrafficRate
	case 42:
		return metric.OutPacketRate
	case 43:
		return metric.InV4Octets
	case 44:
		return metric.OutV4Octets
	case 45:
		return metric.InV4Pkts
	case 46:
		return metric.OutV4Pkts
	case 47:
		return metric.InV6Octets
	case 48:
		return metric.OutV6Octets
	case 49:
		return metric.InV6Pkts
	case 50:
		return metric.OutV6Pkts
	case 51:
		return metric.InV4TrafficRate
	case 52:
		return metric.InV4PacketRate
	case 53:
		return metric.OutV4TrafficRate
	case 54:
		return metric.OutV4PacketRate
	case 55:
		return metric.InV6TrafficRate
	case 56:
		return metric.InV6PacketRate
	case 57:
		return metric.OutV6TrafficRate
	case 58:
		return metric.OutV6PacketRate
	case 59:
		return metric.InputV4Utilization
	case 60:
		return metric.OutputV4Utilization
	case 61:
		return metric.InputV6Utilization
	case 62:
		return metric.OutputV6Utilization
	case 63:
		return metric.InBierOctets
	case 64:
		return metric.InBierPkts
	case 65:
		return metric.OutBierOctets
	case 66:
		return metric.OutBierPkts
	default:
		return nil
	}
}

// getSubinterfaceFieldValue 获取子接口指标字段值
func getSubinterfaceFieldValue(metric *models.SubinterfaceMetric, fieldIndex int) interface{} {
	switch fieldIndex {
	case 5:
		return metric.Ifindex
	case 6:
		return metric.AdminStatusStr
	case 7:
		return metric.OperStatusStr
	case 8:
		return metric.LastChange
	case 9:
		return metric.Logical
	case 10:
		return metric.IPv4OperStatusStr
	case 11:
		return metric.ZteifIfindex
	case 12:
		return metric.ZteifAdminStatusStr
	case 13:
		return metric.ZteifOperStatusStr
	case 14:
		return metric.ZteifPhyStatusStr
	case 15:
		return metric.ZteifIPv4OperStatusStr
	case 16:
		return metric.ZteifIPv6OperStatusStr
	case 17:
		return metric.InOctets
	case 18:
		return metric.InUnicastPkts
	case 19:
		return metric.InBroadcastPkts
	case 20:
		return metric.InMulticastPkts
	case 21:
		return metric.InDiscards
	case 22:
		return metric.InErrors
	case 23:
		return metric.InUnknownProtos
	case 24:
		return metric.InFcsErrors
	case 25:
		return metric.OutOctets
	case 26:
		return metric.OutUnicastPkts
	case 27:
		return metric.OutBroadcastPkts
	case 28:
		return metric.OutMulticastPkts
	case 29:
		return metric.OutDiscards
	case 30:
		return metric.OutErrors
	case 31:
		return metric.CarrierTransitions
	case 32:
		return metric.LastClear
	case 33:
		return metric.InPkts
	case 34:
		return metric.OutPkts
	case 35:
		return metric.InputUtilization
	case 36:
		return metric.OutputUtilization
	case 37:
		return metric.InTrafficRate
	case 38:
		return metric.InPacketRate
	case 39:
		return metric.OutTrafficRate
	case 40:
		return metric.OutPacketRate
	case 41:
		return metric.InV4Octets
	case 42:
		return metric.OutV4Octets
	case 43:
		return metric.InV4Pkts
	case 44:
		return metric.OutV4Pkts
	case 45:
		return metric.InV6Octets
	case 46:
		return metric.OutV6Octets
	case 47:
		return metric.InV6Pkts
	case 48:
		return metric.OutV6Pkts
	case 49:
		return metric.InV4TrafficRate
	case 50:
		return metric.InV4PacketRate
	case 51:
		return metric.OutV4TrafficRate
	case 52:
		return metric.OutV4PacketRate
	case 53:
		return metric.InV6TrafficRate
	case 54:
		return metric.InV6PacketRate
	case 55:
		return metric.OutV6TrafficRate
	case 56:
		return metric.OutV6PacketRate
	case 57:
		return metric.InputV4Utilization
	case 58:
		return metric.OutputV4Utilization
	case 59:
		return metric.InputV6Utilization
	case 60:
		return metric.OutputV6Utilization
	case 61:
		return metric.InBierOctets
	case 62:
		return metric.InBierPkts
	case 63:
		return metric.OutBierOctets
	case 64:
		return metric.OutBierPkts
	default:
		return nil
	}
}